Analisis lexicosintactico = Que tengan sentido o no no es problema
Analisis Semantico = 

Que es la gramatica atribuida
copiamos nuestro gramatica anasint y lo modificamos extendiendolo con variables nuevas y dandole acciones entre llaves para cuando haga la implementacion basandome en nuestras decisiones

var global == todas las reglas
var local == solo en una regla cabesa

Si hay un caso de recursividad, poner el centinela igualando a la recursividad:

 expresion dev cent_amb: expresion (MAS|MENOS|POR|DIV) expresion       #OpBin
          | NUMERO  {cent_amb=NO ambigua}
          | IDENT PARENTESISABIERTO PARENTESISCERRADO    {cent_amb=NO ambigua}
          | IDENT {cent-amb=consultar en memoria el centinela de ambiguedad asociado a la variable IDENT}
          | PARENTESISABIERTO cent_amb=expresion PARENTESISCERRADO {}
          ;

x = 1
y= x+3

x cent_amb = NO AMBIGUO

3 cent_amb = NO AMBIGUO

y= x+3

x cent_amb = SI AMBIGUO

3 cent_amb = NO AMBIGUO


Implementacion

Toda la implementacion se puede hacer con visitors o con listeners, como se quiera



variables: IDENT; {acci√≥n}
	   |____|
       ENTER    EXIT